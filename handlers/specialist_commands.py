# ----------------------------------
# handlers/specialist_commands.py
# ----------------------------------
from typing import Optional
from telegram import Update
from telegram.ext import CallbackContext
from database.queries import get_bookings_for_specialist
from database.queries import cancel_booking_by_id



from database.queries import (
    get_specialist_name,
    get_available_times,
    get_bookings_for_specialist,
    cancel_booking_by_id,
    add_service_to_specialist
)
from utils.logger import logger

def specialist_command_free_time(update: Update, context: CallbackContext):
    """
    –ö–æ–º–∞–Ω–¥–∞ /spec_free_time <specialist_id>
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞.
    –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: /spec_free_time 3
    """
    args = context.args  # —Å–ø–∏—Å–æ–∫ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã
    if not args:
        update.message.reply_text("–£–∫–∞–∂–∏—Ç–µ ID —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞. –ü—Ä–∏–º–µ—Ä: /spec_free_time 3")
        return
    
    try:
        spec_id = int(args[0])
    except ValueError:
        update.message.reply_text("–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ (—á–∏—Å–ª–æ). –ü—Ä–∏–º–µ—Ä: /spec_free_time 3")
        return

    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã
    spec_name = get_specialist_name(spec_id)
    if not spec_name:
        update.message.reply_text(f"–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å id={spec_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤
    # –î–æ–ø—É—Å—Ç–∏–º, –º—ã —Ö–æ—Ç–∏–º –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã –ø–æ –≤—Å–µ–º —É—Å–ª—É–≥–∞–º,
    # –∏–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî 1 —É—Å–ª—É–≥–∞. (–í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ª–æ–≥–∏–∫–∏.)
    # –î–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –ø—Ä–æ—Å–∏—Ç—å –µ—â—ë service_id, 
    # –Ω–æ –æ—Å—Ç–∞–≤–∏–º –ø—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç—ã–º.
    # –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ `get_available_times(spec_id, None)` –≤–µ—Ä–Ω—ë—Ç –≤—Å–µ —Å–≤–æ–±–æ–¥–Ω—ã–µ 
    # —Å–ª–æ—Ç—ã —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –≤–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å–ª—É–≥–∏.
    free_times = get_available_times(spec_id=spec_id, serv_id=None)  # –Ω—É–∂–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –º–µ—Ç–æ–¥
    
    if not free_times:
        update.message.reply_text(f"–£ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ {spec_name} (id={spec_id}) –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.")
        return
    
    times_str = "\n".join([f"üïê {t}" for t in free_times])
    update.message.reply_text(
        f"–°–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã –¥–ª—è {spec_name} (id={spec_id}):\n\n{times_str}"
    )

def specialist_command_appointments(update: Update, context: CallbackContext):
    """
    –ö–æ–º–∞–Ω–¥–∞ /spec_appointments <specialist_id>
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–µ/–±—É–¥—É—â–∏–µ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω–æ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞.
    –ü—Ä–∏–º–µ—Ä: /spec_appointments 3
    """
    args = context.args
    if not args:
        update.message.reply_text("–£–∫–∞–∂–∏—Ç–µ ID —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞. –ü—Ä–∏–º–µ—Ä: /spec_appointments 3")
        return
    
    try:
        spec_id = int(args[0])
    except ValueError:
        update.message.reply_text("–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ (—á–∏—Å–ª–æ). –ü—Ä–∏–º–µ—Ä: /spec_appointments 3")
        return

    spec_name = get_specialist_name(spec_id)
    if not spec_name:
        update.message.reply_text(f"–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å id={spec_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π (booking)
    bookings = get_bookings_for_specialist(spec_id)
    if not bookings:
        update.message.reply_text(f"–£ {spec_name} (id={spec_id}) –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π.")
        return

    lines = []
    for b in bookings:
        lines.append(
            f"üìÖ ID –±—Ä–æ–Ω–∏: {b['booking_id']}\n"
            f"   –î–∞—Ç–∞/–≤—Ä–µ–º—è: {b['date_time']}\n"
            f"   –£—Å–ª—É–≥–∞: {b['service_name']}\n"
            f"   –ö–ª–∏–µ–Ω—Ç: ID {b['user_id']} (–ò–º—è: {b['user_name']})"
        )
    msg = "\n\n".join(lines)
    update.message.reply_text(
        f"–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è {spec_name} (id={spec_id}):\n\n{msg}"
    )

def specialist_command_cancel_booking(update: Update, context: CallbackContext):
    """
    –ö–æ–º–∞–Ω–¥–∞ /spec_cancel_booking <booking_id>
    –û—Ç–º–µ–Ω—è–µ—Ç/—É–¥–∞–ª—è–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å. 
    –ü—Ä–∏–º–µ—Ä: /spec_cancel_booking 42
    """
    args = context.args
    if not args:
        update.message.reply_text("–£–∫–∞–∂–∏—Ç–µ ID –±—Ä–æ–Ω–∏ –¥–ª—è –æ—Ç–º–µ–Ω—ã. –ü—Ä–∏–º–µ—Ä: /spec_cancel_booking 42")
        return
    
    try:
        booking_id = int(args[0])
    except ValueError:
        update.message.reply_text("–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –±—Ä–æ–Ω–∏ (—á–∏—Å–ª–æ). –ü—Ä–∏–º–µ—Ä: /spec_cancel_booking 42")
        return
    
    ok, message = cancel_booking_by_id(booking_id)
    update.message.reply_text(message)

def specialist_command_add_service(update: Update, context: CallbackContext):
    """
    –ö–æ–º–∞–Ω–¥–∞ /spec_add_service <specialist_id> <service_id>
    –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç —É—Å–ª—É–≥—É –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É.
    –ü—Ä–∏–º–µ—Ä: /spec_add_service 3 2
    """
    args = context.args
    if len(args) < 2:
        update.message.reply_text("–£–∫–∞–∂–∏—Ç–µ ID —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –∏ ID —É—Å–ª—É–≥–∏. –ü—Ä–∏–º–µ—Ä: /spec_add_service 3 2")
        return
    
    try:
        spec_id = int(args[0])
        serv_id = int(args[1])
    except ValueError:
        update.message.reply_text("–û–∂–∏–¥–∞–ª–∏—Å—å —á–∏—Å–ª–æ–≤—ã–µ ID. –ü—Ä–∏–º–µ—Ä: /spec_add_service 3 2")
        return
    
    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É specialist_services
    result_msg = add_service_to_specialist(spec_id, serv_id)
    update.message.reply_text(result_msg)
