from typing import Optional, Dict
import telegram
from telegram.ext import CallbackContext
from database.queries import get_user_state, get_user_bookings, set_user_state, delete_user_state
from services.gpt import determine_intent
from handlers.booking import handle_booking_with_gpt
from utils.logger import logger

def handle_message(update: telegram.Update, context: CallbackContext) -> None:
    try:
        user_id = update.message.from_user.id
        user_text = update.message.text
        state = get_user_state(user_id)
        if user_text.startswith('/'):
            handle_commands(update, user_id, user_text)
            return
        if state and state.get('step') == 'confirm':
            handle_booking_with_gpt(update, user_id, user_text, state)
            return
        if user_text.lower() in ['–æ—Ç–º–µ–Ω–∞', 'cancel', '—Å—Ç–æ–ø', 'stop']:
            delete_user_state(user_id)
            update.message.reply_text("–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø–∏—Å–∏ –æ—Ç–º–µ–Ω—ë–Ω.")
            return
        handle_booking_with_gpt(update, user_id, user_text, state)
    except Exception as e:
        logger.error(f"Error in handle_message: {e}", exc_info=True)
        update.message.reply_text(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        )

def handle_commands(update: telegram.Update, user_id: int, command: str) -> None:
    if command == '/start':
        update.message.reply_text(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –ø–æ–º–æ–≥—É –≤–∞–º –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥–∏ –Ω–∞—à–µ–≥–æ —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã. –ß—Ç–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã —Å–¥–µ–ª–∞—Ç—å?"
        )
    elif command == '/help':
        update.message.reply_text(
            "–Ø –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º:\n"
            "- –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Å–ª—É–≥\n"
            "- –ó–∞–ø–∏—Å–∞—Ç—å –≤–∞—Å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É\n"
            "- –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –∑–∞–ø–∏—Å–∏\n\n"
            "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å, –∏ —è –ø–æ–º–æ–≥—É!"
        )
    elif command == '/bookings':
        bookings = get_user_bookings(user_id)
        if bookings:
            message = "–í–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø–∏—Å–∏:\n\n"
            for booking in bookings:
                message += (
                    f"üìÖ {booking['date_time']}\n"
                    f"üéØ –£—Å–ª—É–≥–∞: {booking['service_name']}\n"
                    f"üë©‚Äçüíº –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç: {booking['specialist_name']}\n"
                    "-------------------\n"
                )
            update.message.reply_text(message)
        else:
            update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π.")
    else:
        update.message.reply_text(
            "/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
            "/help - –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É\n"
            "/bookings - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à–∏ –∑–∞–ø–∏—Å–∏"
        )
